<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5e94b965-faba-4f03-b47f-a07c4bad0b80" name="Changes" comment="Created class to conduct tests to understand expression tree&#10;&#10;Created a class for testing purposes only. &#10;&#10;The class ProgramTest.java is used for testing out the Custom Classes. &#10;&#10;The class will contain methods for every different testing scenario. &#10;&#10;The main method will call the scenario method.&#10;&#10;I don't want to cram all the testing scenario into one method(inside the main method) , which is why I am planning to  dedicate separate methods for every testing scenario.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/LimModifiedExpressionTree/CustomExpressionTree.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/LimModifiedExpressionTree/CustomExpressionTree.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/LimModifiedExpressionTree/CustomNode.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/LimModifiedExpressionTree/CustomNode.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="77986982-ab97-4b42-bcd7-0dbcec8d1f18" />
        <option name="url" value="https://github.com/isuckinprogramming/SecondLaboratoryExamDataStructure.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectId" id="2Vuf5j8BDrjmMxhwAKuc4R6sIrp" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Borgs/Documents/programmingFiles/SecondLaboratoryExamDataStructure&quot;
  }
}</component>
  <component name="RunManager" selected="Application.ProgramTest">
    <configuration name="CustomMainRunner" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="LimModifiedExpressionTree.CustomMainRunner" />
      <module name="SecondLaboratoryExamDataStructure" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="LimModifiedExpressionTree.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OriginalExpressionTreeFromTechieDelight" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="OriginalExpressionTreeFromTechieDelight" />
      <module name="SecondLaboratoryExamDataStructure" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProgramTest" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="LimModifiedExpressionTree.ProgramTest" />
      <module name="SecondLaboratoryExamDataStructure" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="LimModifiedExpressionTree.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ProgramTest" />
        <item itemvalue="Application.OriginalExpressionTreeFromTechieDelight" />
        <item itemvalue="Application.CustomMainRunner" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5e94b965-faba-4f03-b47f-a07c4bad0b80" name="Changes" comment="" />
      <created>1695690707327</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1695690707327</updated>
    </task>
    <task id="LOCAL-00001" summary="Initialize java project using Intellij IDEA&#10;&#10;Group 8 problem: expression tree with modifications -&gt; Numeric Input and Modulo addition feature.">
      <created>1695690833588</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1695690833589</updated>
    </task>
    <task id="LOCAL-00002" summary="Retrieved reference implementation for project base&#10;&#10;Retrieved code implementation from techie delight construction of expression tree. &#10;&#10;Link : https://www.techiedelight.com/expression-tree/&#10;&#10;Expression tree Code will be modified as per the requirements of the project.">
      <created>1695691644144</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1695691644144</updated>
    </task>
    <task id="LOCAL-00003" summary="Created Custom class of original implemented code&#10;&#10;All modifications will be implemented inside the classes prefixed with Custom.&#10;&#10;I did not extend the base class because I think this creates unnecessary complications and restrictions.">
      <created>1695692404198</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1695692404198</updated>
    </task>
    <task id="LOCAL-00004" summary="Copied the code from the original to custom&#10;&#10;The copied functions from the original, most of which are static, is converted to non-static inside the custom expression tree class.">
      <created>1695692738069</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1695692738069</updated>
    </task>
    <task id="LOCAL-00005" summary="Created class to conduct tests to understand expression tree&#10;&#10;Created a class for testing purposes only. &#10;&#10;The class ProgramTest.java is used for testing out the Custom Classes. &#10;&#10;The class will contain methods for every different testing scenario. &#10;&#10;The main method will call the scenario method.&#10;&#10;I don't want to cram all the testing scenario into one method(inside the main method) , which is why I am planning to  dedicate separate methods for every testing scenario.">
      <created>1695696620801</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1695696620801</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="Lim/additionOfModuloOperator" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initialize java project using Intellij IDEA&#10;&#10;Group 8 problem: expression tree with modifications -&gt; Numeric Input and Modulo addition feature." />
    <MESSAGE value="Retrieved reference implementation for project base&#10;&#10;Retrieved code implementation from techie delight construction of expression tree. &#10;&#10;Link : https://www.techiedelight.com/expression-tree/&#10;&#10;Expression tree Code will be modified as per the requirements of the project." />
    <MESSAGE value="Created Custom class of original implemented code&#10;&#10;All modifications will be implemented inside the classes prefixed with Custom.&#10;&#10;I did not extend the base class because I think this creates unnecessary complications and restrictions." />
    <MESSAGE value="Copied the code from the original to custom&#10;&#10;The copied functions from the original, most of which are static, is converted to non-static inside the custom expression tree class." />
    <MESSAGE value="Created class to conduct tests to understand expression tree&#10;&#10;Created a class for testing purposes only. &#10;&#10;The class ProgramTest.java is used for testing out the Custom Classes. &#10;&#10;The class will contain methods for every different testing scenario. &#10;&#10;The main method will call the scenario method.&#10;&#10;I don't want to cram all the testing scenario into one method(inside the main method) , which is why I am planning to  dedicate separate methods for every testing scenario." />
    <option name="LAST_COMMIT_MESSAGE" value="Created class to conduct tests to understand expression tree&#10;&#10;Created a class for testing purposes only. &#10;&#10;The class ProgramTest.java is used for testing out the Custom Classes. &#10;&#10;The class will contain methods for every different testing scenario. &#10;&#10;The main method will call the scenario method.&#10;&#10;I don't want to cram all the testing scenario into one method(inside the main method) , which is why I am planning to  dedicate separate methods for every testing scenario." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/LimModifiedExpressionTree/CustomExpressionTree.java</url>
          <line>74</line>
          <properties class="LimModifiedExpressionTree.CustomExpressionTree" method="construct">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>